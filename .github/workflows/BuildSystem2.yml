name: Build All Targets

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/" >> "$GITHUB_OUTPUT"

    - name: Install dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt-get install libjson-c-dev libjson-glib-dev build-essential json-glib-tools

    - name: Build on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        g++ -o AlphaSurf src/*.cpp `pkg-config --cflags --libs json-glib-1.0`

    - name: Build on Windows
      if: matrix.os == 'windows-latest'
      run: |
        cl /EHsc /FeAlphaSurf.exe src\*.cpp

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v2.1.7"
        release_name: "AlphaSurf Release"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

    - name: Upload Release Assets
      if: steps.create_release.outputs.id
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v2.1.7"
        files: |
          ${{ steps.strings.outputs.build-output-dir }}/AlphaSurf
          ${{ steps.strings.outputs.build-output-dir }}/AlphaSurf.exe  # For Windows builds
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
