cmake_minimum_required(VERSION 3.10) # Specify the minimum CMake version
project(AlphaBrowser) # Project name

# Set C++ standard
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Specify the path to your CEF installation
set(CEF_ROOT "path/to/cef") # Update this path to your CEF directory

# Include CEF directories
include_directories(${CEF_ROOT}/include)

# Link the necessary CEF libraries (you may need to adjust the library names based on your CEF build)
set(CEF_LIBRARIES
    ${CEF_ROOT}/Release/libcef.lib
    ${CEF_ROOT}/Release/libcef_dll_wrapper.lib
    ${CEF_ROOT}/Release/cef_sandbox.lib
    ${CEF_ROOT}/Release/cef.lib
)

# Specify the source files
set(SOURCES
    src/browser.cpp
)

# Create the executable
add_executable(AlphaBrowser ${SOURCES})

# Link the CEF libraries to the executable
target_link_libraries(AlphaBrowser ${CEF_LIBRARIES})

# Specify the CEF DLLs that need to be copied to the output directory
add_custom_command(TARGET AlphaBrowser POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    ${CEF_ROOT}/Release/cef.dll
    $<TARGET_FILE_DIR:AlphaBrowser>)

add_custom_command(TARGET AlphaBrowser POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    ${CEF_ROOT}/Release/icudtl.dat
    $<TARGET_FILE_DIR:AlphaBrowser>)

add_custom_command(TARGET AlphaBrowser POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    ${CEF_ROOT}/Release/libcef.dll
    $<TARGET_FILE_DIR:AlphaBrowser>)

# Add any other necessary DLLs from your CEF directory here...
