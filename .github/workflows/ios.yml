name: iOS starter workflow with Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Default Scheme
        id: set_scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default_scheme=$(echo $scheme_list | ruby -e "require 'json'; data = JSON.parse(STDIN.gets); puts data['project']['schemes'][0]")
          echo "default_scheme=$default_scheme" >> $GITHUB_ENV
          echo "Using default scheme: $default_scheme"

      - name: Build
        env:
          scheme: ${{ env.default_scheme }}
          platform: "iOS Simulator"
        run: |
          device=$(xcrun xctrace list devices | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          
          if [ "$scheme" = "default" ]; then scheme="$default_scheme"; fi
          
          if [ "$(ls -A src | grep -i \\.xcworkspace\$)" ]; then 
            filetype_parameter="workspace" 
            file_to_build="$(ls -A src | grep -i \\.xcworkspace\$)" 
          else 
            filetype_parameter="project" 
            file_to_build="$(ls -A src | grep -i \\.xcodeproj\$)" 
          fi
          
          file_to_build=$(echo "$file_to_build" | awk '{$1=$1;print}')
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
