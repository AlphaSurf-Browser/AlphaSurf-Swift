name: iOS Starter Workflow with Release

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build Swift Code
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Swift
        run: |
          swift --version

      - name: Compile Swift Files
        run: |
          # Create the necessary directory structure for the app
          mkdir -p build/AlphaSurf.app/Contents/MacOS

          # Compile main.swift to output as an app
          swiftc -o build/AlphaSurf.app/Contents/MacOS/AlphaSurf src/main.swift

          # Create the Info.plist for the app using the new version
          cat <<EOF > build/AlphaSurf.app/Contents/Info.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleExecutable</key>
              <string>AlphaSurf</string>
              <key>CFBundleIdentifier</key>
              <string>com.wolftechinnovations.AlphaSurf</string>
              <key>CFBundleName</key>
              <string>AlphaSurf</string>
              <key>CFBundleVersion</key>
              <string>${{ env.NEW_VERSION }}</string>
              <key>CFBundleShortVersionString</key>
              <string>${{ env.NEW_VERSION }}</string>
              <key>MinimumOSVersion</key>
              <string>15.0</string> <!-- Minimum iOS version -->
              <key>CFBundlePackageType</key>
              <string>APPL</string>
          </dict>
          </plist>
          EOF

      - name: Create IPA
        run: |
          # Create the Payload directory
          mkdir -p build/AlphaSurf.ipa/Payload

          # Move the .app into the Payload directory
          cp -r build/AlphaSurf.app build/AlphaSurf.ipa/Payload/

          # Change to the build directory
          cd build

          # Create the zip file from the Payload directory
          zip -r AlphaSurf.zip AlphaSurf.ipa/Payload

          # Rename the zip file to ipa
          mv AlphaSurf.zip AlphaSurf.ipa

      - name: List Build Directory
        run: |
          ls -l build  # List the contents of the build directory to verify IPA creation

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/**  # Upload all files and directories in the build directory

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # Use the correct secret token
        with:
          tag_name: '3.0.0'
          release_name: "Release 3.0.0"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/AlphaSurf.ipa  # This will match the IPA file created
          asset_name: AlphaSurf.ipa  # Use the correct name for the uploaded IPA file
          asset_content_type: application/octet-stream  # Content type for the IPA file
